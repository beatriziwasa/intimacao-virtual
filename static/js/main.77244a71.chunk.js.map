{"version":3,"sources":["components/GoogleAPI.js","components/IncluirIntimacaoComponent.js","components/BasicModal.js","components/IntimacaoComponent.js","logo-policial-civil.png","App.js","reportWebVitals.js","index.js"],"names":["googleAPIOptions","op","data","process","SHEET_ID","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","replace","loadInfo","sheet","sheetsById","Math","floor","Date","now","random","addRow","getRows","rows","i","length","id","nome","telefone","classe","crime","tipoProcedimento","codSISP","anoProcedimento","numProcedimento","dataAudiencia","horaAudiencia","save","delete","console","error","alert","GoogleAPI","IncluirIntimacaoComponent","props","useEffect","setInputs","intimacaoSelecionada","setTipoProcedimento","setClasse","setIdIntimacao","useState","inputs","idIntimacao","handleChange","event","name","target","value","values","intimacao","_","isNil","then","buscarIntimacoes","handleClose","onSubmit","preventDefault","salvarIntimacao","className","style","display","justifyContent","htmlFor","type","required","size","onChange","pattern","placeholder","maxLength","onClick","position","top","left","transform","width","backgroundColor","border","boxShadow","p","BasicModal","Modal","open","onClose","Box","sx","IntimacaoComponent","React","setOpen","intimacoes","setIntimacoes","setIntimacaoSelecionada","handleOpen","listaIntimacoes","dataHoraTabela","dataFormatada","dataTemp","split","concat","procedimentoTabela","intimacaoJSON","push","formatDate","whatsappAPI","msg","number","url","encodeURI","window","defaultMaterialTheme","createTheme","actions","icon","tooltip","rowData","mensagemPrimeiroContato","replaceAll","toLowerCase","enviarPrimeiroContato","mensagemLink","enviarLink","mensagemRelembrar","enviarRelembrar","handleAlterar","confirm","undefined","ThemeProvider","theme","background","title","columns","field","sorting","cellStyle","whiteSpace","options","actionsColumnIndex","tableLayout","headerStyle","color","fontWeight","rowStyle","App","alt","src","logoPCSC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.77244a71.chunk.js","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nconst googleAPIOptions = async (op, data) => {\r\n    // Config variables\r\n    const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\r\n    const SHEET_ID = process.env.REACT_APP_SHEET_ID;\r\n    const CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;\r\n    const PRIVATE_KEY = process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY;\r\n\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\n    try {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: CLIENT_EMAIL,\r\n            private_key: PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\r\n        });\r\n\r\n        // loads document properties and worksheets\r\n        await doc.loadInfo();\r\n\r\n        const sheet = doc.sheetsById[SHEET_ID];\r\n\r\n        if (op === 'incluir') {\r\n            data['id'] = Math.floor(Date.now() * Math.random() / 1000);\r\n            await sheet.addRow(data);\r\n\r\n        } else if (op === 'alterar') {\r\n            const rows = await sheet.getRows();\r\n            for (let i = 0; i < rows.length; i++) {\r\n                if (rows[i].id === data['id']) {\r\n                    rows[i].nome = data['nome'];\r\n                    rows[i].telefone = data['telefone'];\r\n                    rows[i].classe = data['classe'];\r\n                    rows[i].crime = data['crime'];\r\n                    rows[i].tipoProcedimento = data['tipoProcedimento'];\r\n                    rows[i].codSISP = data['codSISP'];\r\n                    rows[i].anoProcedimento = data['anoProcedimento'];\r\n                    rows[i].numProcedimento = data['numProcedimento'];\r\n                    rows[i].dataAudiencia = data['dataAudiencia'];\r\n                    rows[i].horaAudiencia = data['horaAudiencia'];\r\n                    await rows[i].save();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else if (op === 'consultar') {\r\n            return await sheet.getRows();\r\n\r\n        } else if (op === 'excluir') {\r\n            const rows = await sheet.getRows();\r\n            for (let i = 0; i < rows.length; i++) {\r\n                if (rows[i].id === data) {\r\n                    await rows[i].delete();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error('Error: ', e);\r\n        alert('Erro nesta operação!');\r\n    }\r\n}\r\n\r\nexport const GoogleAPI = {\r\n    incluir: (data) => googleAPIOptions('incluir', data),\r\n    alterar: (data) => googleAPIOptions('alterar', data),\r\n    consultar: () => googleAPIOptions('consultar', ''),\r\n    excluir: (id) => googleAPIOptions('excluir', id)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { GoogleAPI } from './GoogleAPI';\r\nimport _ from 'lodash';\r\n\r\nexport const IncluirIntimacaoComponent = (props) => {\r\n    \r\n    useEffect(() => {\r\n        setInputs(props.intimacaoSelecionada);\r\n        setTipoProcedimento(props.intimacaoSelecionada.tipoProcedimento);\r\n        setClasse(props.intimacaoSelecionada.classe);\r\n        setIdIntimacao(props.intimacaoSelecionada.id);\r\n    }, [props.intimacaoSelecionada]);\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const [tipoProcedimento, setTipoProcedimento] = useState(\"\");\r\n    const [classe, setClasse] = useState(\"\");\r\n    const [idIntimacao, setIdIntimacao] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}));\r\n    }\r\n    \r\n    const handleChangeSelectTipoProcedimento = (event) => {\r\n        setTipoProcedimento(event.target.value);\r\n    }\r\n    \r\n    const handleChangeSelectClasse = (event) => {\r\n        setClasse(event.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        salvarIntimacao();\r\n    }\r\n\r\n    const limpar = (event) => {\r\n        event.preventDefault();\r\n        setInputs({});\r\n        setClasse(\"\");\r\n        setTipoProcedimento(\"\");\r\n    }\r\n\r\n    async function salvarIntimacao() {\r\n        const intimacao = {\r\n            'nome': inputs.nome,\r\n            'telefone': inputs.telefone,\r\n            'classe': classe,\r\n            'crime': inputs.crime,\r\n            'tipoProcedimento': tipoProcedimento,\r\n            'codSISP': inputs.codSISP,\r\n            'anoProcedimento': inputs.anoProcedimento,\r\n            'numProcedimento': inputs.numProcedimento,\r\n            'dataAudiencia': inputs.dataAudiencia,\r\n            'horaAudiencia': inputs.horaAudiencia\r\n        };\r\n        \r\n        if (_.isNil(idIntimacao)) { //Incluir\r\n            GoogleAPI.incluir(intimacao).then(() => {\r\n                alert('Intimação incluída com sucesso!');\r\n                props.buscarIntimacoes();\r\n                props.handleClose();\r\n            });\r\n        } else { //Alterar\r\n            intimacao['id'] = idIntimacao;\r\n            GoogleAPI.alterar(intimacao).then(() => {\r\n                alert('Intimação alterada com sucesso!');\r\n                props.buscarIntimacoes();\r\n                props.handleClose();\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"nome\">Nome:</label>\r\n                        <input type=\"text\" required id=\"nome\" name=\"nome\" size=\"51\"\r\n                            value={inputs.nome || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"telefone\">Telefone:</label>\r\n                        <input type=\"tel\" required id=\"telefone\" name=\"telefone\" size=\"16\"\r\n                            pattern=\"[0-9]{2} [0-9]{2} [0-9]{5}-[0-9]{4}\"\r\n                            placeholder=\"55 XX XXXXX-XXXX\"\r\n                            maxLength=\"16\"\r\n                            value={inputs.telefone || \"\"} onChange={handleChange} />\r\n                        <small>Exemplo: 55 48 99999-9999</small>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"classe\">Classe:</label>\r\n                        <select required id=\"classe\" name=\"classe\" value={classe} \r\n                            onChange={handleChangeSelectClasse}>\r\n                            <option value=\"\">Selecione</option>\r\n                            <option value=\"Vítima\">Vítima</option>\r\n                            <option value=\"Testemunha\">Testemunha</option>\r\n                            <option value=\"Autor\">Autor</option>\r\n                            <option value=\"Advogado\">Advogado</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"crime\">Tipo de Crime:</label>\r\n                        <input type=\"text\" required id=\"crime\" name=\"crime\" size=\"27\"\r\n                            value={inputs.crime || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"tipoProcedimento\">Tipo de Procedimento:</label>\r\n                        <select required id=\"tipoProcedimento\" name=\"tipoProcedimento\" value={tipoProcedimento} \r\n                            onChange={handleChangeSelectTipoProcedimento}>\r\n                            <option value=\"\">Selecione</option>\r\n                            <option value=\"BO\">Boletim de Ocorrência</option>\r\n                            <option value=\"TC\">Termo Circunstanciado</option>\r\n                            <option value=\"IP\">Inquérito Policial</option>\r\n                            <option value=\"APF\">Auto de Prisão em Flagrante</option>\r\n                        </select>\r\n                    </div>\r\n                </fieldset>\r\n                \r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"codSISP\">Unidade:</label>\r\n                        <input type=\"text\" required id=\"codSISP\" name=\"codSISP\" size=\"20\"\r\n                            value={inputs.codSISP || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"anoProcedimento\">Ano do Procedimento:</label>\r\n                        <input type=\"text\" required id=\"anoProcedimento\" name=\"anoProcedimento\" size=\"20\" \r\n                            value={inputs.anoProcedimento || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"numProcedimento\">Número do Procedimento:</label>\r\n                        <input type=\"text\" required id=\"numProcedimento\" name=\"numProcedimento\" size=\"20\"\r\n                            value={inputs.numProcedimento || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"dataAudiencia\">Data da Audiência:</label>\r\n                        <input type=\"date\" required id=\"dataAudiencia\" name=\"dataAudiencia\" \r\n                            value={inputs.dataAudiencia || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"horaAudiencia\">Hora da Audiência:</label>\r\n                        <input type=\"time\" required id=\"horaAudiencia\" name=\"horaAudiencia\"\r\n                            value={inputs.horaAudiencia || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <button type=\"submit\" className=\"botao submit\">Salvar</button>\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <button className=\"botao-secundario\" onClick={limpar}>Limpar</button>\r\n                    </div>\r\n                </fieldset>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport { IncluirIntimacaoComponent } from './IncluirIntimacaoComponent';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 800,\r\n  backgroundColor: '#d3d3d3',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n            <IncluirIntimacaoComponent\r\n              handleClose={props.handleClose} \r\n              buscarIntimacoes={props.buscarIntimacoes}\r\n              intimacaoSelecionada={props.intimacaoSelecionada} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport MaterialTable from 'material-table'\r\nimport { ThemeProvider, createTheme } from '@mui/material';\r\nimport BasicModal from './BasicModal';\r\nimport { GoogleAPI } from './GoogleAPI';\r\n\r\nexport const IntimacaoComponent = () => {\r\n\r\n    useEffect(() => {\r\n        buscarIntimacoes();\r\n    }, []);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [intimacoes, setIntimacoes] = useState([]);\r\n    const [intimacaoSelecionada, setIntimacaoSelecionada] = useState({});\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    \r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleAlterar = (rowData) => {\r\n        setIntimacaoSelecionada(rowData);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleIncluir = () => {\r\n        setIntimacaoSelecionada({});\r\n        handleOpen();\r\n    }\r\n    \r\n    const buscarIntimacoes = () => {\r\n        GoogleAPI.consultar().then((intimacao) => {\r\n            const listaIntimacoes = [];\r\n            for (let i = 0; i < intimacao.length; i++) {\r\n                let dataHoraTabela = \"\";\r\n                let dataFormatada = \"\";\r\n                if (!_.isNil(intimacao[i].dataAudiencia)) {\r\n                    let dataTemp = intimacao[i].dataAudiencia;\r\n                    dataTemp = dataTemp.split(\"-\");\r\n                    dataFormatada = dataTemp[2].concat(\"/\").concat(dataTemp[1]).concat(\"/\").concat(dataTemp[0]);\r\n                }\r\n                if (!_.isNil(intimacao[i].dataAudiencia) && !_.isNil(intimacao[i].horaAudiencia)) {\r\n                    dataHoraTabela = dataFormatada.concat(\" \").concat(intimacao[i].horaAudiencia);\r\n                } else if (!_.isNil(intimacao[i].dataAudiencia)) {\r\n                    dataHoraTabela = dataFormatada;\r\n                }\r\n        \r\n                let procedimentoTabela = \"\";\r\n                if (!_.isNil(intimacao[i].tipoProcedimento)) {\r\n                    procedimentoTabela = intimacao[i].tipoProcedimento;\r\n                }\r\n                if (!_.isNil(intimacao[i].codSISP)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\" \").concat(intimacao[i].codSISP);\r\n                }\r\n                if (!_.isNil(intimacao[i].anoProcedimento)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\".\").concat(intimacao[i].anoProcedimento);\r\n                }\r\n                if (!_.isNil(intimacao[i].numProcedimento)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\".\").concat(intimacao[i].numProcedimento);\r\n                }\r\n\r\n                const intimacaoJSON = {\r\n                    'id': intimacao[i].id,\r\n                    'nome': intimacao[i].nome,\r\n                    'telefone': intimacao[i].telefone,\r\n                    'classe': intimacao[i].classe,\r\n                    'crime': intimacao[i].crime,\r\n                    'tipoProcedimento': intimacao[i].tipoProcedimento,\r\n                    'codSISP': intimacao[i].codSISP,\r\n                    'anoProcedimento': intimacao[i].anoProcedimento,\r\n                    'numProcedimento': intimacao[i].numProcedimento,\r\n                    'dataAudiencia': intimacao[i].dataAudiencia,\r\n                    'horaAudiencia': intimacao[i].horaAudiencia,\r\n                    'dataHoraTabela': dataHoraTabela,\r\n                    'procedimentoTabela': procedimentoTabela\r\n                };\r\n                listaIntimacoes.push(intimacaoJSON);\r\n            }\r\n            setIntimacoes(listaIntimacoes);\r\n        });\r\n    }\r\n\r\n    const excluirIntimacoes = (id) => {\r\n        GoogleAPI.excluir(id).then(() => {\r\n            alert('Intimação excluída com sucesso!');\r\n            buscarIntimacoes();\r\n        })\r\n    }\r\n\r\n    const enviarPrimeiroContato = (intimacao) => {\r\n        let mensagemPrimeiroContato = `Prezado(a) Sr(a). %NOME%, \r\n\r\n        A Delegacia de Proteção ao Turista (DPTUR) - Unidade Aeroporto, da Polícia Civil do Estado de Santa Catarina, entra em contato para fim de INTIMÁ-LO(A) a prestar depoimento na condição de %CLASSE% nos autos do %PROCEDIMENTO% n. %SISP%.%ANO_PROCED%.%N_PROCED%.\r\n        \r\n        O procedimento refere-se à apuração de suposto ato de %CRIME%.\r\n        \r\n        A data prevista para sua oitiva será em *%DATA% às %HORA%*.\r\n        \r\n        Tendo em vista a atual situação pandêmica, estamos priorizando as oitivas através de videoconferência. Nesse caso, o(a) Sr(a). deverá conectar-se utilizando um computador com webcam e microfone ou telefone celular.\r\n        \r\n        Caso queira fazer-se acompanhar de advogado(a), o mesmo link poderá ser utilizado por seu(sua) procurador(a).\r\n        \r\n        *Para envio do link para videoconferência, solicitamos que confirme o recebimento desta mensagem*.\r\n        \r\n        Para dúvidas, solicitação de cópias de documentos e demais informações, favor utilizar exclusivamente o e-mail dpaeroporto@pc.sc.gov.br , com o assunto %PROCEDIMENTO% n. %SISP%.%ANO_PROCED%.%N_PROCED%.\r\n        \r\n        Atenciosamente,\r\n        DELEGACIA DE PROTEÇÃO AO TURISTA (DPTUR)\r\n        POLÍCIA CIVIL DO ESTADO DE SANTA CATARINA`;\r\n        \r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%NOME%\", intimacao.nome);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%CLASSE%\", intimacao.classe.toLowerCase());\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%CRIME%\", intimacao.crime.toLowerCase());\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%PROCEDIMENTO%\", intimacao.tipoProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%DATA%\", formatDate(intimacao.dataAudiencia));\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%HORA%\", intimacao.horaAudiencia);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemPrimeiroContato);\r\n    }\r\n\r\n    const enviarLink = (intimacao) => {\r\n        let mensagemLink = `O link para acesso à videoconferência é https://webconf.pc.sc.gov.br/dptur-%PROCEDIMENTO%-%SISP%-%N_PROCED%-%ANO_PROCED%\r\n\r\n        O link ficará ativo momentos antes da data e hora agendadas.`;\r\n        \r\n        mensagemLink = mensagemLink.replaceAll(\"%PROCEDIMENTO%\", intimacao.tipoProcedimento);\r\n        mensagemLink = mensagemLink.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemLink = mensagemLink.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemLink = mensagemLink.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemLink);\r\n    }\r\n\r\n    const enviarRelembrar = (intimacao) => {\r\n        let mensagemRelembrar = `Prezado(a) Sr(a). %NOME%, \r\n\r\n        Relembramos Vossa Senhoria da audiência marcada para a data de *%DATA% às %HORA%*.\r\n        \r\n        O link para acesso à videoconferência é https://webconf.pc.sc.gov.br/dptur-%SISP%-%N_PROCED%-%ANO_PROCED%\r\n        \r\n        Atenciosamente,\r\n        DELEGACIA DE PROTEÇÃO AO TURISTA (DPTUR)\r\n        POLÍCIA CIVIL DO ESTADO DE SANTA CATARINA`;\r\n        \r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%NOME%\", intimacao.nome);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%DATA%\", formatDate(intimacao.dataAudiencia));\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%HORA%\", intimacao.horaAudiencia);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemRelembrar);\r\n    }\r\n\r\n    const formatDate = (data) => {\r\n        let dataTemp = data;\r\n        dataTemp = dataTemp.split(\"-\");\r\n        return dataTemp[2].concat(\"/\").concat(dataTemp[1]).concat(\"/\").concat(dataTemp[0]);\r\n    }\r\n\r\n    const whatsappAPI = (telefone, msg) => {\r\n        let URL = 'https://wa.me';\r\n        let number = telefone;\r\n        number = number.replace(/[^\\w\\s]/gi, '').replace(/ /g, '');\r\n        let url = \"\".concat(URL, \"/\").concat(number);\r\n        if (msg) {\r\n            url += \"?text=\".concat(encodeURI(msg));\r\n        }\r\n        window.open(url);\r\n    }\r\n\r\n    const defaultMaterialTheme = createTheme();\r\n\r\n    const columns = [\r\n        { title: 'Nome', field: 'nome', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Envolvimento', field: 'classe', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Crime', field: 'crime', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Procedimento', field: 'procedimentoTabela', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Data Audiência', field: 'dataHoraTabela', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }}\r\n    ];\r\n\r\n    const actions = [\r\n        {\r\n            icon: 'outgoing_mail',\r\n            tooltip: 'Enviar primeiro contato',\r\n            onClick: (event, rowData) => enviarPrimeiroContato(rowData)\r\n        },\r\n        {\r\n            icon: 'link',\r\n            tooltip: 'Enviar link',\r\n            onClick: (event, rowData) => enviarLink(rowData)\r\n        },\r\n        {\r\n            icon: 'event_repeat',\r\n            tooltip: 'Relembrar oitiva',\r\n            onClick: (event, rowData) => enviarRelembrar(rowData)\r\n        },\r\n        {\r\n            icon: 'edit',\r\n            tooltip: 'Alterar',\r\n            onClick: (event, rowData) => handleAlterar(rowData)\r\n        },\r\n        {\r\n            icon: 'delete',\r\n            tooltip: 'Excluir',\r\n            onClick: (event, rowData) => window.confirm('Realmente deseja excluir esta intimação?') ? excluirIntimacoes(rowData.id) : undefined\r\n        },\r\n        {\r\n            icon: \"add_box\",\r\n            tooltip: \"Incluir\",\r\n            position: \"toolbar\",\r\n            onClick: () => handleIncluir()\r\n        }\r\n    ];\r\n\r\n    const options = {\r\n        actionsColumnIndex: -1,\r\n        tableLayout: \"auto\",\r\n        headerStyle: {\r\n            backgroundColor: \"#dbca9e\",\r\n            color: \"#000000\",\r\n            fontWeight: \"bold\",\r\n            whiteSpace: 'nowrap'\r\n        },\r\n        rowStyle: {\r\n            backgroundColor: \"#dbca9e\",\r\n            color: \"#000000\",\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={defaultMaterialTheme}>\r\n                <MaterialTable\r\n                    style={{ background:'#e4dbb1' }}\r\n                    title=\"INTIMAÇÕES\"\r\n                    columns={columns}\r\n                    data={intimacoes}\r\n                    actions={actions}\r\n                    options={options}\r\n                />\r\n            </ThemeProvider>\r\n\r\n            <BasicModal open={open}\r\n                handleClose={handleClose}\r\n                buscarIntimacoes={buscarIntimacoes}\r\n                intimacaoSelecionada={intimacaoSelecionada} />\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo-policial-civil.46adb87e.png\";","import './App.css';\nimport { IntimacaoComponent } from './components/IntimacaoComponent';\nimport logoPCSC from './logo-policial-civil.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img alt=\"Logo da PCSC\" src={logoPCSC}/>\n        <h1>INTIMAÇÃO VIRTUAL</h1>\n        <h2>11ª Delegacia de Polícia da Capital - DPTUR</h2>\n        <br/>\n        <IntimacaoComponent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}