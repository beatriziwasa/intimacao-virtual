{"version":3,"sources":["components/GoogleAPI.js","components/IncluirIntimacaoComponent.js","components/BasicModal.js","components/IntimacaoComponent.js","logo-policial-civil.png","components/Header.js","components/Login.js","components/Logout.js","components/LoginDialog.js","App.js","reportWebVitals.js","index.js"],"names":["googleAPIOptions","op","data","process","SHEET_ID","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","replace","loadInfo","sheet","sheetsById","Math","floor","Date","now","random","addRow","getRows","rows","i","length","id","nome","telefone","classe","crime","tipoProcedimento","codSISP","anoProcedimento","numProcedimento","dataAudiencia","horaAudiencia","save","delete","console","error","alert","GoogleAPI","IncluirIntimacaoComponent","props","useEffect","setInputs","intimacaoSelecionada","setTipoProcedimento","setClasse","setIdIntimacao","useState","inputs","idIntimacao","handleChange","event","name","target","value","values","handleSubmit","preventDefault","salvarIntimacao","apiCalendar","ApiCalendar","intimacao","idCalendarEvent","titulo","substring","dataHoraInicio","dataTemp","dataHoraFim","setMinutes","getMinutes","summary","start","dateTime","end","_","isNil","listEvents","timeMin","toISOString","timeMax","then","result","isEmpty","items","createEvent","res","buscarIntimacoes","handleClose","catch","err","updateEvent","onSubmit","className","style","display","justifyContent","htmlFor","type","required","size","onChange","pattern","placeholder","maxLength","onClick","position","top","left","transform","width","backgroundColor","border","boxShadow","p","BasicModal","Modal","open","onClose","Box","sx","IntimacaoComponent","React","setOpen","intimacoes","setIntimacoes","setIntimacaoSelecionada","handleOpen","listaIntimacoes","dataHoraTabela","dataFormatada","split","concat","procedimentoTabela","intimacaoJSON","push","deletarEvento","deleteEvent","formatDate","whatsappAPI","msg","number","url","encodeURI","window","defaultMaterialTheme","createTheme","actions","icon","tooltip","rowData","mensagemPrimeiroContato","replaceAll","toLowerCase","enviarPrimeiroContato","mensagemLink","enviarLink","mensagemRelembrar","enviarRelembrar","handleAlterar","confirm","excluirIntimacoes","undefined","ThemeProvider","theme","background","title","columns","field","sorting","cellStyle","whiteSpace","options","actionsColumnIndex","paging","tableLayout","headerStyle","color","fontWeight","rowStyle","useStyles","makeStyles","header","fontFamily","textAlign","logo","marginRight","toolbar","Header","logoIntimacaoVirtual","alt","src","logoPCSC","height","tituloIntimacaoVirtual","Typography","variant","component","getMenuButtons","Button","loggedIn","AppBar","Toolbar","clientId","Login","gapi","load","client","init","scope","buttonText","onSuccess","profileObj","email","handleUsuarioLogado","handleLogin","onFailure","cookiePolicy","isSignedIn","Logout","onLogoutSuccess","handleLogout","LoginDialog","usuarioLogado","setUsuarioLogado","Dialog","DialogTitle","List","maxWidth","bgcolor","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","Fragment","align","secondary","autoFocus","button","App","setLoggedIn","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b70abd9d.chunk.js","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nconst googleAPIOptions = async (op, data) => {\r\n    // Config variables\r\n    const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\r\n    const SHEET_ID = process.env.REACT_APP_SHEET_ID;\r\n    const CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;\r\n    const PRIVATE_KEY = process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY;\r\n\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\n    try {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: CLIENT_EMAIL,\r\n            private_key: PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\r\n        });\r\n\r\n        // loads document properties and worksheets\r\n        await doc.loadInfo();\r\n\r\n        const sheet = doc.sheetsById[SHEET_ID];\r\n\r\n        if (op === 'incluir') {\r\n            data['id'] = Math.floor(Date.now() * Math.random() / 1000);\r\n            await sheet.addRow(data);\r\n\r\n        } else if (op === 'alterar') {\r\n            const rows = await sheet.getRows();\r\n            for (let i = 0; i < rows.length; i++) {\r\n                if (rows[i].id === data['id']) {\r\n                    rows[i].nome = data['nome'];\r\n                    rows[i].telefone = data['telefone'];\r\n                    rows[i].classe = data['classe'];\r\n                    rows[i].crime = data['crime'];\r\n                    rows[i].tipoProcedimento = data['tipoProcedimento'];\r\n                    rows[i].codSISP = data['codSISP'];\r\n                    rows[i].anoProcedimento = data['anoProcedimento'];\r\n                    rows[i].numProcedimento = data['numProcedimento'];\r\n                    rows[i].dataAudiencia = data['dataAudiencia'];\r\n                    rows[i].horaAudiencia = data['horaAudiencia'];\r\n                    await rows[i].save();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else if (op === 'consultar') {\r\n            return await sheet.getRows();\r\n\r\n        } else if (op === 'excluir') {\r\n            const rows = await sheet.getRows();\r\n            for (let i = 0; i < rows.length; i++) {\r\n                if (rows[i].id === data) {\r\n                    await rows[i].delete();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error('Error: ', e);\r\n        alert('Erro nesta operação!');\r\n    }\r\n}\r\n\r\nexport const GoogleAPI = {\r\n    incluir: (data) => googleAPIOptions('incluir', data),\r\n    alterar: (data) => googleAPIOptions('alterar', data),\r\n    consultar: () => googleAPIOptions('consultar', ''),\r\n    excluir: (id) => googleAPIOptions('excluir', id)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { GoogleAPI } from './GoogleAPI';\r\nimport _ from 'lodash';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\n\r\nexport const IncluirIntimacaoComponent = (props) => {\r\n    \r\n    useEffect(() => {\r\n        setInputs(props.intimacaoSelecionada);\r\n        setTipoProcedimento(props.intimacaoSelecionada.tipoProcedimento);\r\n        setClasse(props.intimacaoSelecionada.classe);\r\n        setIdIntimacao(props.intimacaoSelecionada.id);\r\n    }, [props.intimacaoSelecionada]);\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const [tipoProcedimento, setTipoProcedimento] = useState(\"\");\r\n    const [classe, setClasse] = useState(\"\");\r\n    const [idIntimacao, setIdIntimacao] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}));\r\n    }\r\n    \r\n    const handleChangeSelectTipoProcedimento = (event) => {\r\n        setTipoProcedimento(event.target.value);\r\n    }\r\n    \r\n    const handleChangeSelectClasse = (event) => {\r\n        setClasse(event.target.value);\r\n    }\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        salvarIntimacao();\r\n    }\r\n\r\n    const limpar = (event) => {\r\n        event.preventDefault();\r\n        setInputs({});\r\n        setClasse(\"\");\r\n        setTipoProcedimento(\"\");\r\n    }\r\n\r\n    const config = {\r\n        \"clientId\": process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n        \"apiKey\": process.env.REACT_APP_GOOGLE_API_KEY,\r\n        \"scope\": \"https://www.googleapis.com/auth/calendar\",\r\n        \"discoveryDocs\": [\r\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\r\n        ]\r\n    };\r\n    \r\n    const apiCalendar = new ApiCalendar(config);\r\n\r\n    async function salvarIntimacao() {\r\n        let intimacao = {\r\n            'nome': inputs.nome,\r\n            'telefone': inputs.telefone,\r\n            'classe': classe,\r\n            'crime': inputs.crime,\r\n            'tipoProcedimento': tipoProcedimento,\r\n            'codSISP': inputs.codSISP,\r\n            'anoProcedimento': inputs.anoProcedimento,\r\n            'numProcedimento': inputs.numProcedimento,\r\n            'dataAudiencia': inputs.dataAudiencia,\r\n            'horaAudiencia': inputs.horaAudiencia,\r\n            'idCalendarEvent': inputs.idCalendarEvent\r\n        };\r\n        \r\n        let titulo = intimacao.tipoProcedimento + \" \" \r\n                    + intimacao.numProcedimento + \"/\" \r\n                    + intimacao.anoProcedimento + \" - \"\r\n                    + intimacao.classe.substring(0,1) + \" - \"\r\n                    + intimacao.nome;\r\n        const dataHoraInicio = new Date(intimacao.dataAudiencia + \" \" + intimacao.horaAudiencia);\r\n        let dataTemp = new Date(dataHoraInicio);\r\n        let dataHoraFim = new Date(dataTemp.setMinutes(dataTemp.getMinutes() + 30));\r\n        const event = {\r\n            summary: titulo,\r\n            start: {\r\n                dateTime: dataHoraInicio\r\n            },\r\n            end: {\r\n                dateTime: dataHoraFim\r\n            }\r\n        }\r\n\r\n        if (_.isNil(idIntimacao)) { //Incluir\r\n            apiCalendar.listEvents({ //Calendario de feriados\r\n                timeMin: dataHoraInicio.toISOString(),\r\n                timeMax: dataHoraFim.toISOString()\r\n            }, 'pt.brazilian#holiday@group.v.calendar.google.com').then(({ result }) => {\r\n                if (!_.isEmpty(result.items)) {\r\n                    alert('É feriado nessa data! É ' + result.items[0].summary + \"!\");\r\n                    return;\r\n                } else {\r\n                    apiCalendar.listEvents({ //Calendario do delegado\r\n                        timeMin: dataHoraInicio.toISOString(),\r\n                        timeMax: dataHoraFim.toISOString()\r\n                    }, 'scandolara.pcsc@gmail.com').then(({ result }) => {\r\n                        if (!_.isEmpty(result.items)) {\r\n                            alert('Já existe evento na agenda do delegado para esse horário!');\r\n                            return;\r\n                        } else {\r\n                            apiCalendar.listEvents({ //Calendario das oitivas\r\n                                timeMin: dataHoraInicio.toISOString(),\r\n                                timeMax: dataHoraFim.toISOString()\r\n                            }, 'tpfgaifi5bf5lsfn089nlc607k@group.calendar.google.com').then(({ result }) => {\r\n                                if (!_.isEmpty(result.items)) {\r\n                                    alert('Já existe evento no calendário para esse horário!');\r\n                                    return;\r\n                                } else {\r\n                                    apiCalendar.createEvent(event, 'tpfgaifi5bf5lsfn089nlc607k@group.calendar.google.com')\r\n                                        .then(res => {\r\n                                            alert('Inclusão no Google Calendar efetuada com sucesso!');\r\n                                            intimacao['idCalendarEvent'] = res.result.id;\r\n                                            GoogleAPI.incluir(intimacao).then(() => {\r\n                                                alert('Intimação incluída com sucesso!');\r\n                                                props.buscarIntimacoes();\r\n                                                props.handleClose();\r\n                                            })\r\n                                            .catch(err => {\r\n                                                alert('Erro de inclusão no sistema de Intimação Virtual!');\r\n                                                return;\r\n                                            });\r\n                                        })\r\n                                        .catch(err => {\r\n                                            alert('Erro de inclusão no Google Calendar!');\r\n                                            return;\r\n                                        })\r\n                                }\r\n                            }).catch(err => {\r\n                                alert('Erro de listagem de eventos do Google Calendar! (calendário de oitivas)');\r\n                                return;\r\n                            });\r\n                        }\r\n                    }).catch(err => {\r\n                        alert('Erro de listagem de eventos do Google Calendar! (agenda do delegado)');\r\n                        return;\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                alert('Erro de listagem de eventos do Google Calendar! (calendário de feriados)');\r\n                return;\r\n            });\r\n\r\n        } else { //Alterar\r\n            apiCalendar.listEvents({ //Calendario de feriados\r\n                timeMin: dataHoraInicio.toISOString(),\r\n                timeMax: dataHoraFim.toISOString()\r\n            }, 'pt.brazilian#holiday@group.v.calendar.google.com').then(({ result }) => {\r\n                if (!_.isEmpty(result.items)) {\r\n                    alert('É feriado nessa data! É ' + result.items[0].summary + \"!\");\r\n                    return;\r\n                } else {\r\n                    apiCalendar.listEvents({ //Calendario do delegado\r\n                        timeMin: dataHoraInicio.toISOString(),\r\n                        timeMax: dataHoraFim.toISOString()\r\n                    }, 'scandolara.pcsc@gmail.com').then(({ result }) => {\r\n                        if (!_.isEmpty(result.items)) {\r\n                            alert('Já existe evento na agenda do delegado para esse horário!');\r\n                            return;\r\n                        } else {\r\n                            apiCalendar.listEvents({ //Calendario das oitivas\r\n                                timeMin: dataHoraInicio.toISOString(),\r\n                                timeMax: dataHoraFim.toISOString()\r\n                            }, 'tpfgaifi5bf5lsfn089nlc607k@group.calendar.google.com').then(({ result }) => {\r\n                                if (!_.isEmpty(result.items)) {\r\n                                    alert('Já existe evento no calendário para esse horário!');\r\n                                    return;\r\n                                } else {\r\n                                    apiCalendar.updateEvent(event, intimacao.idCalendarEvent, 'tpfgaifi5bf5lsfn089nlc607k@group.calendar.google.com')\r\n                                    .then(res => {\r\n                                        alert('Alteração no Google Calendar efetuada com sucesso!');\r\n                                        intimacao['id'] = idIntimacao;\r\n                                        GoogleAPI.alterar(intimacao).then(() => {\r\n                                            alert('Intimação alterada com sucesso!');\r\n                                            props.buscarIntimacoes();\r\n                                            props.handleClose();\r\n                                        })\r\n                                        .catch(err => {\r\n                                            alert('Erro de alteração no sistema de Intimação Virtual!');\r\n                                            return;\r\n                                        });\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        alert('Erro de alteração no Google Calendar!');\r\n                                        return;\r\n                                    })\r\n                                }\r\n                            }).catch(err => {\r\n                                alert('Erro de listagem de eventos do Google Calendar! (calendário de oitivas)');\r\n                                return;\r\n                            });\r\n                        }\r\n                    }).catch(err => {\r\n                        alert('Erro de listagem de eventos do Google Calendar! (agenda do delegado)');\r\n                        return;\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                alert('Erro de listagem de eventos do Google Calendar! (calendário de feriados)');\r\n                return;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"nome\">Nome:</label>\r\n                        <input type=\"text\" required id=\"nome\" name=\"nome\" size=\"51\"\r\n                            value={inputs.nome || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"telefone\">Telefone:</label>\r\n                        <input type=\"tel\" required id=\"telefone\" name=\"telefone\" size=\"16\"\r\n                            pattern=\"[0-9]{2} [0-9]{2} [0-9]{5}-[0-9]{4}\"\r\n                            placeholder=\"55 XX XXXXX-XXXX\"\r\n                            maxLength=\"16\"\r\n                            value={inputs.telefone || \"\"} onChange={handleChange} />\r\n                        <small>Exemplo: 55 48 99999-9999</small>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"classe\">Classe:</label>\r\n                        <select required id=\"classe\" name=\"classe\" value={classe} \r\n                            onChange={handleChangeSelectClasse}>\r\n                            <option value=\"\">Selecione</option>\r\n                            <option value=\"Vítima\">Vítima</option>\r\n                            <option value=\"Testemunha\">Testemunha</option>\r\n                            <option value=\"Autor\">Autor</option>\r\n                            <option value=\"Advogado\">Advogado</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"crime\">Tipo de Crime:</label>\r\n                        <input type=\"text\" required id=\"crime\" name=\"crime\" size=\"27\"\r\n                            value={inputs.crime || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"tipoProcedimento\">Tipo de Procedimento:</label>\r\n                        <select required id=\"tipoProcedimento\" name=\"tipoProcedimento\" value={tipoProcedimento} \r\n                            onChange={handleChangeSelectTipoProcedimento}>\r\n                            <option value=\"\">Selecione</option>\r\n                            <option value=\"BO\">Boletim de Ocorrência</option>\r\n                            <option value=\"TC\">Termo Circunstanciado</option>\r\n                            <option value=\"IP\">Inquérito Policial</option>\r\n                            <option value=\"APF\">Auto de Prisão em Flagrante</option>\r\n                        </select>\r\n                    </div>\r\n                </fieldset>\r\n                \r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"codSISP\">Unidade:</label>\r\n                        <input type=\"text\" required id=\"codSISP\" name=\"codSISP\" size=\"20\"\r\n                            value={inputs.codSISP || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"anoProcedimento\">Ano do Procedimento:</label>\r\n                        <input type=\"text\" required id=\"anoProcedimento\" name=\"anoProcedimento\" size=\"20\" \r\n                            value={inputs.anoProcedimento || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"numProcedimento\">Número do Procedimento:</label>\r\n                        <input type=\"text\" required id=\"numProcedimento\" name=\"numProcedimento\" size=\"20\"\r\n                            value={inputs.numProcedimento || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"dataAudiencia\">Data da Audiência:</label>\r\n                        <input type=\"date\" required id=\"dataAudiencia\" name=\"dataAudiencia\" \r\n                            value={inputs.dataAudiencia || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <label htmlFor=\"horaAudiencia\">Hora da Audiência:</label>\r\n                        <input type=\"time\" required id=\"horaAudiencia\" name=\"horaAudiencia\"\r\n                            value={inputs.horaAudiencia || \"\"} onChange={handleChange} />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"grupo\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <div className=\"campo\">\r\n                        <button type=\"submit\" className=\"botao submit\">Salvar</button>\r\n                    </div>\r\n                    <div className=\"campo\">\r\n                        <button className=\"botao-secundario\" onClick={limpar}>Limpar</button>\r\n                    </div>\r\n                </fieldset>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport { IncluirIntimacaoComponent } from './IncluirIntimacaoComponent';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 800,\r\n  backgroundColor: '#d3d3d3',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n            <IncluirIntimacaoComponent\r\n              handleClose={props.handleClose} \r\n              buscarIntimacoes={props.buscarIntimacoes}\r\n              intimacaoSelecionada={props.intimacaoSelecionada} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport MaterialTable from 'material-table'\r\nimport { ThemeProvider, createTheme } from '@mui/material';\r\nimport BasicModal from './BasicModal';\r\nimport { GoogleAPI } from './GoogleAPI';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\n\r\nexport const IntimacaoComponent = () => {\r\n\r\n    useEffect(() => {\r\n        buscarIntimacoes();\r\n    }, []);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [intimacoes, setIntimacoes] = useState([]);\r\n    const [intimacaoSelecionada, setIntimacaoSelecionada] = useState({});\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleAlterar = (rowData) => {\r\n        setIntimacaoSelecionada(rowData);\r\n        handleOpen();\r\n    }\r\n\r\n    const handleIncluir = () => {\r\n        setIntimacaoSelecionada({});\r\n        handleOpen();\r\n    }\r\n    \r\n    const buscarIntimacoes = () => {\r\n        GoogleAPI.consultar().then((intimacao) => {\r\n            const listaIntimacoes = [];\r\n            for (let i = 0; i < intimacao.length; i++) {\r\n                let dataHoraTabela = \"\";\r\n                let dataFormatada = \"\";\r\n                if (!_.isNil(intimacao[i].dataAudiencia)) {\r\n                    let dataTemp = intimacao[i].dataAudiencia;\r\n                    dataTemp = dataTemp.split(\"-\");\r\n                    dataFormatada = dataTemp[2].concat(\"/\").concat(dataTemp[1]).concat(\"/\").concat(dataTemp[0]);\r\n                }\r\n                if (!_.isNil(intimacao[i].dataAudiencia) && !_.isNil(intimacao[i].horaAudiencia)) {\r\n                    dataHoraTabela = dataFormatada.concat(\" \").concat(intimacao[i].horaAudiencia);\r\n                } else if (!_.isNil(intimacao[i].dataAudiencia)) {\r\n                    dataHoraTabela = dataFormatada;\r\n                }\r\n        \r\n                let procedimentoTabela = \"\";\r\n                if (!_.isNil(intimacao[i].tipoProcedimento)) {\r\n                    procedimentoTabela = intimacao[i].tipoProcedimento;\r\n                }\r\n                if (!_.isNil(intimacao[i].codSISP)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\" \").concat(intimacao[i].codSISP);\r\n                }\r\n                if (!_.isNil(intimacao[i].anoProcedimento)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\".\").concat(intimacao[i].anoProcedimento);\r\n                }\r\n                if (!_.isNil(intimacao[i].numProcedimento)) {\r\n                    procedimentoTabela = procedimentoTabela.concat(\".\").concat(intimacao[i].numProcedimento);\r\n                }\r\n\r\n                const intimacaoJSON = {\r\n                    'id': intimacao[i].id,\r\n                    'nome': intimacao[i].nome,\r\n                    'telefone': intimacao[i].telefone,\r\n                    'classe': intimacao[i].classe,\r\n                    'crime': intimacao[i].crime,\r\n                    'tipoProcedimento': intimacao[i].tipoProcedimento,\r\n                    'codSISP': intimacao[i].codSISP,\r\n                    'anoProcedimento': intimacao[i].anoProcedimento,\r\n                    'numProcedimento': intimacao[i].numProcedimento,\r\n                    'dataAudiencia': intimacao[i].dataAudiencia,\r\n                    'horaAudiencia': intimacao[i].horaAudiencia,\r\n                    'dataHoraTabela': dataHoraTabela,\r\n                    'procedimentoTabela': procedimentoTabela,\r\n                    'idCalendarEvent': intimacao[i].idCalendarEvent\r\n                };\r\n                listaIntimacoes.push(intimacaoJSON);\r\n            }\r\n            setIntimacoes(listaIntimacoes);\r\n        });\r\n    }\r\n\r\n    const config = {\r\n        \"clientId\": process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n        \"apiKey\": process.env.REACT_APP_GOOGLE_API_KEY,\r\n        \"scope\": \"https://www.googleapis.com/auth/calendar\",\r\n        \"discoveryDocs\": [\r\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\r\n        ]\r\n    };\r\n    \r\n    const apiCalendar = new ApiCalendar(config);\r\n\r\n    async function excluirIntimacoes(id, idCalendarEvent) {\r\n        const retornoDelete = await deletarEvento(idCalendarEvent);\r\n        if (retornoDelete === 1) { //Retorno com erro no deletar evento no GoogleCalendar\r\n            //return;\r\n        }\r\n\r\n        GoogleAPI.excluir(id).then(() => {\r\n            alert('Intimação excluída com sucesso!');\r\n            buscarIntimacoes();\r\n        });\r\n    }\r\n\r\n    async function deletarEvento(idCalendarEvent) {\r\n        return apiCalendar.deleteEvent(idCalendarEvent, 'tpfgaifi5bf5lsfn089nlc607k@group.calendar.google.com')\r\n            .then(res => {\r\n                alert('Exclusão no Google Calendar efetuada com sucesso!');\r\n                return 0;\r\n            })\r\n            .catch(err => {\r\n                alert('Erro ao tentar excluir agenda da intimação no Google Calendar!')\r\n                return 1\r\n            })\r\n    }\r\n\r\n    const enviarPrimeiroContato = (intimacao) => {\r\n        let mensagemPrimeiroContato = `Prezado(a) Sr(a). %NOME%, \r\n\r\n        A Delegacia de Proteção ao Turista (DPTUR) - Unidade Aeroporto, da Polícia Civil do Estado de Santa Catarina, entra em contato para fim de INTIMÁ-LO(A) a prestar depoimento na condição de %CLASSE% nos autos do %PROCEDIMENTO% n. %SISP%.%ANO_PROCED%.%N_PROCED%.\r\n        \r\n        O procedimento refere-se à apuração de suposto ato de %CRIME%.\r\n        \r\n        A data prevista para sua oitiva será em *%DATA% às %HORA%*.\r\n        \r\n        Tendo em vista a atual situação pandêmica, estamos priorizando as oitivas através de videoconferência. Nesse caso, o(a) Sr(a). deverá conectar-se utilizando um computador com webcam e microfone ou telefone celular.\r\n        \r\n        Caso queira fazer-se acompanhar de advogado(a), o mesmo link poderá ser utilizado por seu(sua) procurador(a).\r\n        \r\n        *Para envio do link para videoconferência, solicitamos que confirme o recebimento desta mensagem*.\r\n        \r\n        Para dúvidas, solicitação de cópias de documentos e demais informações, favor utilizar exclusivamente o e-mail dpaeroporto@pc.sc.gov.br , com o assunto %PROCEDIMENTO% n. %SISP%.%ANO_PROCED%.%N_PROCED%.\r\n        \r\n        Atenciosamente,\r\n        DELEGACIA DE PROTEÇÃO AO TURISTA (DPTUR)\r\n        POLÍCIA CIVIL DO ESTADO DE SANTA CATARINA`;\r\n        \r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%NOME%\", intimacao.nome);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%CLASSE%\", intimacao.classe.toLowerCase());\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%CRIME%\", intimacao.crime.toLowerCase());\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%PROCEDIMENTO%\", intimacao.tipoProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%DATA%\", formatDate(intimacao.dataAudiencia));\r\n        mensagemPrimeiroContato = mensagemPrimeiroContato.replaceAll(\"%HORA%\", intimacao.horaAudiencia);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemPrimeiroContato);\r\n    }\r\n\r\n    const enviarLink = (intimacao) => {\r\n        let mensagemLink = `O link para acesso à videoconferência é https://webconf.pc.sc.gov.br/dptur-%PROCEDIMENTO%-%SISP%-%N_PROCED%-%ANO_PROCED%\r\n\r\n        O link ficará ativo momentos antes da data e hora agendadas.`;\r\n        \r\n        mensagemLink = mensagemLink.replaceAll(\"%PROCEDIMENTO%\", intimacao.tipoProcedimento);\r\n        mensagemLink = mensagemLink.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemLink = mensagemLink.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemLink = mensagemLink.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemLink);\r\n    }\r\n\r\n    const enviarRelembrar = (intimacao) => {\r\n        let mensagemRelembrar = `Prezado(a) Sr(a). %NOME%, \r\n\r\n        Relembramos Vossa Senhoria da audiência marcada para a data de *%DATA% às %HORA%*.\r\n        \r\n        O link para acesso à videoconferência é https://webconf.pc.sc.gov.br/dptur-%SISP%-%N_PROCED%-%ANO_PROCED%\r\n        \r\n        Atenciosamente,\r\n        DELEGACIA DE PROTEÇÃO AO TURISTA (DPTUR)\r\n        POLÍCIA CIVIL DO ESTADO DE SANTA CATARINA`;\r\n        \r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%NOME%\", intimacao.nome);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%DATA%\", formatDate(intimacao.dataAudiencia));\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%HORA%\", intimacao.horaAudiencia);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%SISP%\", intimacao.codSISP);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%N_PROCED%\", intimacao.numProcedimento);\r\n        mensagemRelembrar = mensagemRelembrar.replaceAll(\"%ANO_PROCED%\", intimacao.anoProcedimento);\r\n\r\n        whatsappAPI(intimacao.telefone, mensagemRelembrar);\r\n    }\r\n\r\n    const formatDate = (data) => {\r\n        let dataTemp = data;\r\n        dataTemp = dataTemp.split(\"-\");\r\n        return dataTemp[2].concat(\"/\").concat(dataTemp[1]).concat(\"/\").concat(dataTemp[0]);\r\n    }\r\n\r\n    const whatsappAPI = (telefone, msg) => {\r\n        let URL = 'https://wa.me';\r\n        let number = telefone;\r\n        number = number.replace(/[^\\w\\s]/gi, '').replace(/ /g, '');\r\n        let url = \"\".concat(URL, \"/\").concat(number);\r\n        if (msg) {\r\n            url += \"?text=\".concat(encodeURI(msg));\r\n        }\r\n        window.open(url);\r\n    }\r\n\r\n    const defaultMaterialTheme = createTheme();\r\n\r\n    const columns = [\r\n        { title: 'Nome', field: 'nome', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'//, position: \"sticky\", left: 0, background: \"#e4dbb1\",\r\n           }},\r\n        { title: 'Envolvimento', field: 'classe', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Crime', field: 'crime', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Procedimento', field: 'procedimentoTabela', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }},\r\n        { title: 'Data Audiência', field: 'dataHoraTabela', sorting: false, cellStyle: {\r\n            whiteSpace: 'nowrap'\r\n           }}\r\n    ];\r\n\r\n    const actions = [\r\n        {\r\n            icon: 'outgoing_mail',\r\n            tooltip: 'Enviar primeiro contato',\r\n            onClick: (event, rowData) => enviarPrimeiroContato(rowData)\r\n        },\r\n        {\r\n            icon: 'link',\r\n            tooltip: 'Enviar link',\r\n            onClick: (event, rowData) => enviarLink(rowData)\r\n        },\r\n        {\r\n            icon: 'event_repeat',\r\n            tooltip: 'Relembrar oitiva',\r\n            onClick: (event, rowData) => enviarRelembrar(rowData)\r\n        },\r\n        {\r\n            icon: 'edit',\r\n            tooltip: 'Alterar',\r\n            onClick: (event, rowData) => handleAlterar(rowData)\r\n        },\r\n        {\r\n            icon: 'delete',\r\n            tooltip: 'Excluir',\r\n            onClick: (event, rowData) => window.confirm('Realmente deseja excluir esta intimação?') ? excluirIntimacoes(rowData.id, rowData.idCalendarEvent) : undefined\r\n        },\r\n        {\r\n            icon: \"add_box\",\r\n            tooltip: \"Incluir\",\r\n            position: \"toolbar\",\r\n            onClick: () => handleIncluir()\r\n        }\r\n    ];\r\n\r\n    const options = {\r\n        actionsColumnIndex: -1,\r\n        paging: false,\r\n        tableLayout: \"auto\",\r\n        headerStyle: {\r\n            backgroundColor: \"#dbca9e\",\r\n            color: \"#000000\",\r\n            fontWeight: \"bold\",\r\n            whiteSpace: 'nowrap'\r\n        },\r\n        rowStyle: {\r\n            backgroundColor: \"#dbca9e\",\r\n            color: \"#000000\",\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={defaultMaterialTheme}>\r\n                <MaterialTable\r\n                    style={{ background:'#e4dbb1' }}\r\n                    title=\"INTIMAÇÕES\"\r\n                    columns={columns}\r\n                    data={intimacoes}\r\n                    actions={actions}\r\n                    options={options}\r\n                />\r\n            </ThemeProvider>\r\n\r\n            <BasicModal open={open}\r\n                handleClose={handleClose}\r\n                buscarIntimacoes={buscarIntimacoes}\r\n                intimacaoSelecionada={intimacaoSelecionada} />\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo-policial-civil.46adb87e.png\";","import { AppBar, Toolbar, Typography, makeStyles, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport logoPCSC from '../logo-policial-civil.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    header: {\r\n        backgroundColor: \"lightgrey\",\r\n    },\r\n    titulo: {\r\n        fontFamily: \"Work Sans, sans-serif\",\r\n        fontWeight: 600,\r\n        color: \"black\",\r\n        textAlign: \"left\",\r\n    },\r\n    logo: {\r\n        marginRight: \"20px\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const { header, titulo, logo, toolbar } = useStyles();\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n        <Toolbar className={toolbar}>\r\n            {logoIntimacaoVirtual}\r\n            {tituloIntimacaoVirtual}\r\n            {getMenuButtons()}\r\n        </Toolbar>\r\n    );\r\n  };\r\n\r\n  const logoIntimacaoVirtual = (\r\n    <img alt=\"Logo da PCSC\" src={logoPCSC} width=\"35\" height=\"45\" className={logo} />\r\n  );\r\n\r\n  const tituloIntimacaoVirtual = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={titulo}>\r\n        INTIMAÇÃO VIRTUAL - 11ª Delegacia de Polícia da Capital - DPTUR\r\n    </Typography>\r\n  );\r\n\r\n  const getMenuButtons = () => {\r\n    return <Button onClick={props.handleOpen}>{props.loggedIn ? \"Logout\" : \"Login\"}</Button>\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={header}>{displayDesktop()}</AppBar>\r\n    </header>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nfunction Login(props) {\r\n    useEffect(() => {\r\n        function start() {\r\n            gapi.client.init({\r\n                clientId: clientId,\r\n                scope: 'email',\r\n            });\r\n        }\r\n        gapi.load('client:auth2', start);\r\n    }, []);\r\n\r\n    const onSuccess = (res) => {\r\n        if (res.profileObj.email === 'beatriz.iwasa@gmail.com'\r\n            || res.profileObj.email === 'dpaeroportofln@gmail.com'\r\n            || res.profileObj.email === 'scandolara.pcsc@gmail.com'\r\n            || res.profileObj.email === 'dpaeroporto@pc.sc.gov.br') {\r\n            props.handleUsuarioLogado(res.profileObj);\r\n            props.handleLogin();\r\n        } else {\r\n            alert('Usuário sem acesso! Entre em contato com o administrador do sistema de Intimação Virtual.');\r\n        }\r\n    };\r\n\r\n    const onFailure = (res) => {\r\n        alert('Falha ao se autenticar!');\r\n    }\r\n    \r\n    return (\r\n        <div className='center'>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect } from 'react';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nfunction Logout(props) {\r\n    useEffect(() => {\r\n        function start() {\r\n            gapi.client.init({\r\n                clientId: clientId,\r\n                scope: 'email',\r\n            });\r\n        }\r\n        gapi.load('client:auth2', start);\r\n    }, []);\r\n\r\n    const onSuccess = () => {\r\n        alert('Logout feito com sucesso!');\r\n        props.handleLogout();\r\n    };\r\n    \r\n    return (\r\n        <div className='center'>\r\n            <GoogleLogout\r\n                clientId={clientId}\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={onSuccess}\r\n            ></GoogleLogout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, { useState } from 'react';\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nfunction LoginDialog(props) {\r\n    const { open, loggedIn, handleClose, handleLogin, handleLogout } = props;\r\n\r\n    const [usuarioLogado, setUsuarioLogado] = useState({});\r\n    const handleUsuarioLogado = (usuarioLogado) => setUsuarioLogado(usuarioLogado);\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Dados do Usuário:</DialogTitle>\r\n            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"avatar\" src={usuarioLogado['imageUrl']} sx={{ width: 56, height: 56 }} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={\r\n                        <React.Fragment>\r\n                            &nbsp;&nbsp;&nbsp;Nome:\r\n                            <Typography style={{ fontWeight: 600 }} align=\"center\">\r\n                                {usuarioLogado['name']}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            &nbsp;&nbsp;&nbsp;E-mail:\r\n                            <Typography style={{ fontWeight: 600 }} align=\"center\">\r\n                                {usuarioLogado['email']}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    } />\r\n                </ListItem>\r\n                <ListItem autoFocus button onClick={() => handleClose()}>\r\n                    {loggedIn ? \r\n                        <Logout handleLogout={handleLogout} />\r\n                        :\r\n                        <Login handleLogin={handleLogin} handleUsuarioLogado={handleUsuarioLogado} />\r\n                    }\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LoginDialog;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport './App.css';\nimport { IntimacaoComponent } from './components/IntimacaoComponent';\nimport Header from './components/Header';\nimport logoPCSC from './logo-policial-civil.png';\nimport LoginDialog from './components/LoginDialog';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const handleLogin = () => setLoggedIn(true);\n  const handleLogout = () => setLoggedIn(false);\n  \n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div className='App'>\n      <Header handleOpen={handleOpen} loggedIn={loggedIn}/>\n\n      {loggedIn ? \n        <div>\n          <Box sx={{ overflow: \"auto\" }}>\n            <Box sx={{ width: \"100%\", display: \"table\", tableLayout: \"fixed\" }}>\n              <IntimacaoComponent />\n            </Box>\n          </Box>\n        </div>\n      :\n        <div className='center'>\n          <img alt=\"Logo da PCSC\" src={logoPCSC} width=\"115\" height=\"145\" />\n        </div> \n      }\n\n      <LoginDialog\n        open={open}\n        loggedIn={loggedIn}\n        handleClose={handleClose}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}